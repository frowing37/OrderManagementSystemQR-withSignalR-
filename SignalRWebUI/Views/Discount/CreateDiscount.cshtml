@{
    Layout = "~/Views/AdminLayout/Index.cshtml";
    var categoriesList = ViewBag.Categories as List<ResultCategoryDto>;
    var productsList = ViewBag.Products as List<ResultProductDto>;
}

@using SignalRWebUI.Models.Dtos.CategoryDto
@using SignalRWebUI.Models.Dtos.ProductDto

@model SignalRWebUI.Models.Dtos.DiscountDto.CreateDiscountDto

<div class="content">
    <div class="container-fluid">
        <h4 class="page-title">İndirim İşlemleri</h4>
        <div class="row">
            <div class="col-md-12">
                <form asp-controller="Discount" asp-action="CreateDiscount" method="post">
                    <div class="card">
                        <div class="card-header">
                            <div class="card-title">İndirim Ekleme Sayfası</div>
                        </div>
                        <div class="card-body">
                            <div class="form-group">
                                <label for="discountname">İndirim Başlığı giriniz</label>
                                <input id="discountname" type="text" asp-for="Title" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="discountdescription">Telefon giriniz</label>
                                <input id="discountdescription" type="tel" asp-for="Amount" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="discountIMGurl">Mail giriniz</label>
                                <input id="discountIMGurl" type="email" asp-for="Description" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="discountIMGurl">Alt Açıklama giriniz</label>
                                <input id="discountIMGurl" type="text" asp-for="ImageURL" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="discountProduct">İndirimin Uygulanacağı Ürünler</label>
                                @Html.DropDownList("Kategoriler", new SelectList(categoriesList),new {@class = "custom-dropdown", @id="selectC", @onchange="updateProducts()"})
                                @Html.DropDownList("Ürünler", new SelectList(productsList),new {@class = "custom-dropdown", @id="selectP"})
                                <button id="addList" type="button" onclick="processSelection()" >İndirim Listesine Ekle</button>
                                <hr/>
                                <input id="ProductNames" type="text" />
                                <input id="ProductIDs" type="hidden" />
                            </div>
                        </div>
                        <div class="card-action">
                            <button type="submit" class="btn btn-primary">İletişim Ekle</button>
                        </div>
                    </div>
                </form>
            </div>
        </div>
    </div>
</div>

<style>
    .custom-dropdown {
        width: 200px; /* Dropdown genişliği */
        padding: 8px;
        font-size: 14px;
        border: 1px solid #ced4da;
        border-radius: 4px;
    }
    
    .custom-dropdown option:checked {
        background-color: #007bff;
        color: #fff;
    }
</style>

<script>
    function updateProducts() {
        var selectedCategory = document.getElementById("selectC").value;
   
        class product {
            constructor(intProductID, strProductName) {
                this.intProductID = intProductID;
                this.strProductName = strProductName;
            }
        }
        
        $.ajax({
            type: "GET",
            dataType: "json",
            url: "http://localhost:7237/api/Product",
            data: source,
            success: function (data) {
                
                const productsByActiveCategory = data.map(item => {
                    if (item.CategoryID == selectedCategory.value) {
                        return new product(item.ProductID, item.ProductName);
                        }
                });
        
                const dropdownListForProducts = $('#selectP');
                
                        productsByActiveCategory.forEach(obj => {
                            dropdownListForProducts.append($('<option>', {
                                value: obj.intProductID,
                                text: obj.strProductName
                            }));
                        });
            },
            error: function (error) {
                const jsonValue = jQuery.parseJSON(error.responseText);
                alert("error" + error.responseText);
            }
        });

    }
    
    function processSelection() {
        
        var selectedOptions = document.getElementById("selectP").selectedOptions;
        
        var selectedProducts = [];
        
        for (var i = 0; i < selectedOptions.length; i++) {
            selectedProducts.push(selectedOptions[i].value);
        }
    }
</script>